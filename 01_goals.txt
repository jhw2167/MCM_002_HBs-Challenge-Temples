Requirements
---

1. Create challenge_temple nbt structure
---

2. compile and get challenge_temple to spawn in world
---


3. create challenge_base 2x2 chunk structure
---
	- The floors and walls of a challenge room
	- to be used as the default template for a challenge

4. Spawn challenge_base in super flat dimension
---
	- SKIPPED
	- we perhaps want each challenge_temple to be its own structure

	- HACK for grid placement of structures

	loadRegistryContents
	


5. Create a superflat single biom dimension to host challenges
---
	- Created, structures still spawn, trying to turn them off


6. Spawn immersive portal that can travel to external dimension
---

	1. Add immersive portal dependency
	---
	fabric based portal gun mod adds it like this:

	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:${immptl_version}")
    	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:${immptl_version}")
    	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:build:${immptl_version}")

	  maven {
        	name = 'JitPack'
	        url = 'https://jitpack.io'
    	}

	immptl_version=v3.2.7-mc1.20.1


	2. Forge version
	---

7. Add API to common to call forge/fabric portals API dynamically
---

	- using Blay's PlatformProxy system


8. Remodel 2x2 temple room
---

	- prevent portal from spawning in one room 0x0
	- 

9. Add support for exit portal
---

	- create syntax for building end portal
		- Create sample of implementation to determine space needed
		- 8x8 torched off area
		- 6x6 area from bottom right, structure placed in positive x,y,z direction
		- floor of portal exit equals floor of ground where designating torches were placed
		-
	- save structure as an nbt
		- needs to be location agnostic, radial symmetry
	- dynamically locate soul torches after challenge replacement
		- y -1 offeset structure placement
	- after each temple reset:
		- find soul torches
		- save challengeExitPos and exitPortalPos and exitPortal
		- places challenge_exit_00.nbt
		- find soul torches again
		- delete existing exit portal
		- create new exit portal and save
		- on server restart, ensure to reset challenge
	- set challenge end portal dynamically
	
	- Add challenge_water - grants regeneration, protection, blast protection to those who recently completed a challenge
	- Add challenge_button - stone button
	- Add challenge_lamp - redstone lamp, always on
	- Add challenge_piston/sticky - can only be broken with create wrench
	- 

	CHALLENGE SUBMISSION VERIFICATION
	1. Challenge submission matches existing naming convention
	2. Challenge submisison contains only 4 soul torches
	3. 


10. Add support for temple refresh on portal death
---

	- Establish hook to player death
	- trigger challlenge rebuild on player death
	- Define chest locations
	- Create challenge_chest type that is not refilled on challenge reset
	- Chests are reflled on challenge reset
	- Challenge_chests are cleared on challenge reset after being opened


11.
---

	Create Challenge class to store challenge metaData and settings

	Challenge Info:
		CHALLENGE_DB/CHALLENGE_TEMPLATE.json

	ChallengeDB:
	challenges.csv - input file, adding new challenge authors and names
	challenges_updated.csv - db file containing real time file id of challenge.json, 
	author and challenge common name, also binary indicating whether this challenge should be used

	Challenge JSON:
	"difficulty": "PEACEFUL | EASY | NORMAL | HARD | VERY HARD",	//0-4
	"lootPool": "minor | standard | major | epic | lengendary",	//0-4

	1. Update HBs foundation for new JSON loading functions
	2. Complete loadChallenge method and handle exceptions
	3. Create sample challengeJson files for 2x2 and 4x4 rooms
	4. Create sample challengeJson for diamond and gold rooms
	5. Create mappable enums to difficulty and loot pool strings
	6. Ensure to save completed challengs to foundationDB, load on server start
	7. Use size values to set loop for Challenge room s.t. we can parse for soul torches

	8. Update gold and diamond rooms to include soul torches
	9. test structure placement logic
	10. Write portal placement logic

	11. add new challenge blocks
	12. add chest witholding logic
	

	NEXT STEP - ensure portal exit structure builds on structure startup, wired up to
	playerStartChallenge method


12. To do
---

	hbs_challenge_temple:challenge_room_2x2
	hbs_challenge_temple:challenge_brick
	hbs_challenge_temple:challenge_glowstone
	/give @p minecraft:structure_block
	/give @s jigsaw
	hbs_challenge_temple:challenge_room_4x4_00


hbs_challenge_temple:challenge_room_4x4_00
- spawn 00, 00 contains 01-08, 
- _08 can replace everything else

	- add Challenge blocks - stone bricks, glowstone, glass, wood, leaves
	- use processor lists to edit structure NBT data
		- compile time nbt editor: https://offroaders123.github.io/Dovetail/

	- determine how to fix chests at runtime
	- refill chests on player death

 

2148104148

,
    {
      "weight": 10,
      "element": {
        "location": "hbs_challenge_temple:challenge_room_4x4_00",
        "processors": "minecraft:empty",
        "projection": "rigid",
        "element_type": "minecraft:single_pool_element"
      }
    }

keep notes
---

Temples:
0: WAITING - waiting for portal construction
0.5 FAILED - entity block not found - RAM only
1: DETERMINED -  portal has been set
3. CHALLENGED - player has entered the portal
4. COMPLETED - player has right clicked the torch to complete the challenge, fill rewards chest
5. RECHALLENGED - challenged again, but don't give rewards

1. onChunkLoad - test grid check and create Managed Temple, set(0)
2. Attempt to find block entity, set(1) or set(0.5) for failed
3. onPlayerChangeDimension
- check dimension was to or from challengeDim
- check entity is player
- handle each player uniquely in case players use temples concurrently
- take all items from inventory and store in entity outside of temple
- clear all items on the floor in and outside the temple
- destroy any blocks placed in or outside the temple
- clear any items in the players inventory
- destroy the portal
- close the portal from the outside
3.5 onPlayerChangeDimension (x2) 
- if portalStatus == CHALLENGED, then player is leaving the temple
- give them their stuff back
- set temple status to DETERMINED
- given it 10 seconds, then rebuild the portal

4. OnPlayerRightClickSoulTorch
- check if temple is RE-CHALLENGED
- temple set(4)
- 
- fill rewards chest if first completion


- maintain player's current dimension


TempleCleanUp()
- cleanupLoot - removes loot on the floor
- cleanupEntities - kills and respawns entities
- cleanupBlocks - removes all blocks
- cleanupChests - cleans and refills chests
- cleanPlayer - reset hearts, remove effects, remove loot


	




