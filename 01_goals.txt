Requirements
---

1. Create challenge_temple nbt structure
---

2. compile and get challenge_temple to spawn in world
---


3. create challenge_base 2x2 chunk structure
---
	- The floors and walls of a challenge room
	- to be used as the default template for a challenge

4. Spawn challenge_base in super flat dimension
---
	- SKIPPED
	- we perhaps want each challenge_temple to be its own structure

	- HACK for grid placement of structures

	loadRegistryContents
	


5. Create a superflat single biom dimension to host challenges
---
	- Created, structures still spawn, trying to turn them off


6. Spawn immersive portal that can travel to external dimension
---

	1. Add immersive portal dependency
	---
	fabric based portal gun mod adds it like this:

	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:${immptl_version}")
    	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:${immptl_version}")
    	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:build:${immptl_version}")

	  maven {
        	name = 'JitPack'
	        url = 'https://jitpack.io'
    	}

	immptl_version=v3.2.7-mc1.20.1


	2. Forge version
	---

7. Add API to common to call forge/fabric portals API dynamically
---

	- using Blay's PlatformProxy system

8. To do
---

	hbs_challenge_temple:challenge_room_2x2
	/give @p minecraft:structure_block


	- remodel 2x2 challenge temple
	- build 4x4 challenge temple variant
		- decide on ID, naming convention
		- build gem variants
		- id: challenge_000000.nbt
		- hash author code + challenge_name

	- Take player inventory when they travel to challenge dimension
 		- remove armor
		- remove potion effects

	- ManagedTemple data effectively
		- don't re-place portals
		- intercept template pool logic to determine which was placed
		- please don't rotate the pools
		- delete portal on temple completion

	- Build ManagedPlayer class to keep track of player data
	- Keep track of shrine attempts, completions, deaths

	- add Challenge blocks - stone bricks, glowstone, glass, wood, leaves
	- use processor lists to edit structure NBT data
		- compile time nbt editor: https://offroaders123.github.io/Dovetail/

	- determine how to fix chests at runtime
	- refill chests on player death
	- create algorithm to reset structure on player death
		- can use a pool for that

	




